{
  "swagger": "2.0",
  "host": "zebras.endpoints.apigee-apihub-demo.cloud.goog",
  "schemes": [
    "https"
  ],
  "basePath": "/",
  "info": {
    "version": "1.0.0",
    "title": "Fauna Zebras API",
    "description": "Manage collections of zebras.",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "contact": {
      "name": "Zebras Support Team",
      "email": "animals@apigee-apihub-demo.github.io",
      "url": "https://github.com/apigee-apihub-demo/animals"
    }
  },
  "paths": {
    "/v1/zebras": {
      "get": {
        "summary": "List all zebras",
        "description": "List all zebras",
        "operationId": "listZebras",
        "tags": [
          "zebras"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "How many zebras to return at one time (max 100)",
            "format": "int32",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A paged array of zebras",
            "headers": {
              "x-next": {
                "description": "A link to the next page of responses",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Zebras"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "Create zebras",
        "description": "Create zebras",
        "operationId": "createZebra",
        "tags": [
          "zebras"
        ],
        "responses": {
          "201": {
            "description": "Null response"
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "parameters": [
          {
            "name": "pet",
            "in": "body",
            "description": "Pet to add to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          }
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/v1/zebras/{zebraId}": {
      "get": {
        "summary": "Info for a specific zebra",
        "description": "Info for a specific zebra",
        "operationId": "getZebra",
        "tags": [
          "zebras"
        ],
        "parameters": [
          {
            "name": "zebraId",
            "in": "path",
            "description": "The id of the zebra to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "schema": {
              "$ref": "#/definitions/Zebra"
            }
          },
          "default": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "tags": [
    {
      "name": "zebras",
      "description": "This API is about zebras."
    }
  ],
  "definitions": {
    "Zebra": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      }
    },
    "Zebras": {
      "type": "array",
      "maxItems": 100,
      "items": {
        "$ref": "#/definitions/Zebra"
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "x-components": {}
}
